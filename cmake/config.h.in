/* A2065 ethernet card */
#cmakedefine A2065

/* A590/A2091 SCSI */
#cmakedefine A2091

/* Action Replay 1/2/3 support */
#cmakedefine ACTION_REPLAY

/* Define if building universal (internal helper macro) */
#cmakedefine AC_APPLE_UNIVERSAL_BUILD

/* AGA chipset emulation */
#cmakedefine AGA

/* builtin AHI device (unsupported) */
#cmakedefine AHI

/* Arcadia arcade system */
#cmakedefine ARCADIA

/* autoconfig support, fast ram, harddrives etc... */
#cmakedefine AUTOCONFIG

/* DMS support */
#cmakedefine A_DMS

/* ZIP archive support */
#cmakedefine A_ZIP

/* built-in bsdsocket.library */
#cmakedefine BSDSOCKET

/* IPF support via libcapsimage */
#cmakedefine CAPS

/* CD32 emulation */
#cmakedefine CD32

/* CDTV emulation */
#cmakedefine CDTV

/* Code generation (disable for cross-compilation) */
#cmakedefine CODEGEN

/* generic 680x0 emulation */
#cmakedefine CPUEMU_0

/* 68000/68010 prefetch emulation */
#cmakedefine CPUEMU_11

/* 68000/68010 cycle-exact cpu&blitter */
#cmakedefine CPUEMU_13

/* 68020 prefetch */
#cmakedefine CPUEMU_20

/* 68020 "cycle-exact" + blitter */
#cmakedefine CPUEMU_21

/* 68030 prefetch */
#cmakedefine CPUEMU_22

/* 68030 "cycle-exact" + blitter */
#cmakedefine CPUEMU_23

/* 68060 "cycle-exact" + blitter */
#cmakedefine CPUEMU_24

/* 68040 "cycle-exact" + blitter (needs cpuemu-24) */
#cmakedefine CPUEMU_25

/* Aranym 68040 MMU */
#cmakedefine CPUEMU_31

/* Previous 68030 MMU */
#cmakedefine CPUEMU_32

/* 68060 MMU */
#cmakedefine CPUEMU_33

/* generic 680x0 with JIT direct memory access */
#cmakedefine CPUEMU_40

/* generic 680x0 with indirect memory access */
#cmakedefine CPUEMU_50

/* Define to one of `_getb67', `GETB67', `getb67' for Cray-2 and Cray-YMP
   systems. This function is required for `alloca.c' support on those systems.
   */
#cmakedefine CRAY_STACKSEG_END

/* Define to 1 if using `alloca.c'. */
#cmakedefine C_ALLOCA

/* debugger support (cannot be disabled right now) */
#cmakedefine DEBUGGER

/* drive sound emulation */
#cmakedefine DRIVESOUND

/* FDI 1.0 and 2.x image support */
#cmakedefine FDI2RAW

/* directory hard drives */
#cmakedefine FILESYS

/* FPU emulation */
#cmakedefine FPUEMU

/* Define to 1 */
#cmakedefine FPU_UAE

/* multiple driver backends (experimental) */
#cmakedefine FSE_DRIVERS

/* GFX hardware boards */
#cmakedefine GFXBOARD

/* Define to 1 if you have the `alarm' function. */
#cmakedefine HAVE_ALARM

/* Define to 1 if you have `alloca', as a function or macro. */
#cmakedefine HAVE_ALLOCA

/* Define to 1 if you have <alloca.h> and it should be used (not on Ultrix).
   */
#cmakedefine HAVE_ALLOCA_H

/* Define to 1 if you have the <AL/alc.h> header file. */
#cmakedefine HAVE_AL_ALC_H

/* Define to 1 if you have the <AL/al.h> header file. */
#cmakedefine HAVE_AL_AL_H

/* Define to 1 if you have the <arpa/inet.h> header file. */
#cmakedefine HAVE_ARPA_INET_H

/* Define to 1 if you have the `atexit' function. */
#cmakedefine HAVE_ATEXIT

/* Define to 1 if you have the 'bswap_16' function. */
#cmakedefine HAVE_BSWAP_16

/* Define to 1 if you have the 'bswap_32' function. */
#cmakedefine HAVE_BSWAP_32

/* Define to 1 if you have the <byteswap.h> header file. */
#cmakedefine HAVE_BYTESWAP_H

/* Define to 1 if you have the `bzero' function. */
#cmakedefine HAVE_BZERO

/* Define to 1 if your system has a working `chown' function. */
#cmakedefine HAVE_CHOWN

/* Define to 1 if you have the `clock_gettime' function. */
#cmakedefine HAVE_CLOCK_GETTIME

/* Define to 1 if you have the declaration of `CLOCK_MONOTONIC', and to 0 if
   you don't. */
#cmakedefine HAVE_DECL_CLOCK_MONOTONIC

/* Define to 1 if you have the <dlfcn.h> header file. */
#cmakedefine HAVE_DLFCN_H

/* Define to 1 if you have the `dlopen' function. */
#cmakedefine HAVE_DLOPEN

/* Define to 1 if you have the `dup2' function. */
#cmakedefine HAVE_DUP2

/* Define to 1 if you have the <endian.h> header file. */
#cmakedefine HAVE_ENDIAN_H

/* Define to 1 if you have the <fcntl.h> header file. */
#cmakedefine HAVE_FCNTL_H

/* Define to 1 if you have the <fenv.h> header file. */
#cmakedefine HAVE_FENV_H

/* Define to 1 if you have the <float.h> header file. */
#cmakedefine HAVE_FLOAT_H

/* Define to 1 if you have the `floor' function. */
#cmakedefine HAVE_FLOOR

/* Define to 1 if you have the `fork' function. */
#cmakedefine HAVE_FORK

/* Define to 1 if fseeko (and presumably ftello) exists and is declared. */
#cmakedefine HAVE_FSEEKO

/* Define to 1 if you have the `fseeko64' function. */
#cmakedefine HAVE_FSEEKO64

/* Define to 1 if you have the `ftello64' function. */
#cmakedefine HAVE_FTELLO64

/* Define to 1 if you have the `ftime' function. */
#cmakedefine HAVE_FTIME

/* Define to 1 if you have the `ftruncate' function. */
#cmakedefine HAVE_FTRUNCATE

/* Define to 1 if the system has the `always_inline' function attribute */
#cmakedefine HAVE_FUNC_ATTRIBUTE_ALWAYS_INLINE

/* Define to 1 if the system has the `fastcall' function attribute */
#cmakedefine HAVE_FUNC_ATTRIBUTE_FASTCALL

/* Define to 1 if the system has the `format' function attribute */
#cmakedefine HAVE_FUNC_ATTRIBUTE_FORMAT

/* Define to 1 if the system has the `noinline' function attribute */
#cmakedefine HAVE_FUNC_ATTRIBUTE_NOINLINE

/* Define to 1 if the system has the `noreturn' function attribute */
#cmakedefine HAVE_FUNC_ATTRIBUTE_NORETURN

/* Define to 1 if the system has the `regparm' function attribute */
#cmakedefine HAVE_FUNC_ATTRIBUTE_REGPARM

/* Define to 1 if the system has the `unused' function attribute */
#cmakedefine HAVE_FUNC_ATTRIBUTE_UNUSED

/* Define to 1 if you have the `getcwd' function. */
#cmakedefine HAVE_GETCWD

/* Define to 1 if you have the `gethostbyaddr' function. */
#cmakedefine HAVE_GETHOSTBYADDR

/* Define to 1 if you have the `gethostbyname' function. */
#cmakedefine HAVE_GETHOSTBYNAME

/* Define to 1 if you have the `gethostname' function. */
#cmakedefine HAVE_GETHOSTNAME

/* Define to 1 if you have the `getpagesize' function. */
#cmakedefine HAVE_GETPAGESIZE

/* Define to 1 if you have the `gettimeofday' function. */
#cmakedefine HAVE_GETTIMEOFDAY

/* Define to 1 if you have the `gmtime_r' function. */
#cmakedefine HAVE_GMTIME_R

/* Define to 1 if you have the `index' function. */
#cmakedefine HAVE_INDEX

/* Define to 1 if you have the `inet_aton' function. */
#cmakedefine HAVE_INET_ATON

/* Define to 1 if you have the `inet_ntoa' function. */
#cmakedefine HAVE_INET_NTOA

/* Define to 1 if you have the <inttypes.h> header file. */
#cmakedefine HAVE_INTTYPES_H

/* Define to 1 if you have the `compat' library (-lcompat). */
#cmakedefine HAVE_LIBCOMPAT

/* Define to 1 if you have the `dl' library (-ldl). */
#cmakedefine HAVE_LIBDL

/* Define to 1 if you have the `gdi32' library (-lgdi32). */
#cmakedefine HAVE_LIBGDI32

/* Define to 1 if you have the `GL' library (-lGL). */
#cmakedefine HAVE_LIBGL

/* Define to 1 if you have the `Iphlpapi' library (-lIphlpapi). */
#cmakedefine HAVE_LIBIPHLPAPI

/* Define to 1 if you have the <libkern/OSByteOrder.h> header file. */
#cmakedefine HAVE_LIBKERN_OSBYTEORDER_H

/* Define to 1 if you have the `m' library (-lm). */
#cmakedefine HAVE_LIBM

/* Define to 1 if you have the `Winmm' library (-lWinmm). */
#cmakedefine HAVE_LIBWINMM

/* Define to 1 if you have the `Ws2_32' library (-lWs2_32). */
#cmakedefine HAVE_LIBWS2_32

/* Define to 1 if you have the `z' library (-lz). */
#cmakedefine HAVE_LIBZ

/* Define to 1 if you have the <limits.h> header file. */
#cmakedefine HAVE_LIMITS_H

/* Define to 1 if you have the `localeconv' function. */
#cmakedefine HAVE_LOCALECONV

/* Define to 1 if you have the <locale.h> header file. */
#cmakedefine HAVE_LOCALE_H

/* Define to 1 if you have the `localtime_r' function. */
#cmakedefine HAVE_LOCALTIME_R

/* Define to 1 if the system has the type 'long long int'. */
#cmakedefine HAVE_LONG_LONG_INT

/* Define to 1 if you have the <malloc.h> header file. */
#cmakedefine HAVE_MALLOC_H

/* Define to 1 if you have the `memchr' function. */
#cmakedefine HAVE_MEMCHR

/* Define to 1 if you have the `memmove' function. */
#cmakedefine HAVE_MEMMOVE

/* Define to 1 if you have the <memory.h> header file. */
#cmakedefine HAVE_MEMORY_H

/* Define to 1 if you have the `memset' function. */
#cmakedefine HAVE_MEMSET

/* Define to 1 if you have the `mkdir' function. */
#cmakedefine HAVE_MKDIR

/* Define to 1 if you have a working `mmap' system call. */
#cmakedefine HAVE_MMAP

/* Define to 1 if you have the `munmap' function. */
#cmakedefine HAVE_MUNMAP

/* Define to 1 if you have the <netdb.h> header file. */
#cmakedefine HAVE_NETDB_H

/* Define to 1 if you have the <netinet/in.h> header file. */
#cmakedefine HAVE_NETINET_IN_H

/* Define to 1 if you have the <OpenAL/alc.h> header file. */
#cmakedefine HAVE_OPENAL_ALC_H

/* Define to 1 if you have the <OpenAL/al.h> header file. */
#cmakedefine HAVE_OPENAL_AL_H

/* Define to 1 if you have the `posix_memalign' function. */
#cmakedefine HAVE_POSIX_MEMALIGN

/* Define to 1 if you have the `pow' function. */
#cmakedefine HAVE_POW

/* Define to 1 if the system has the type `ptrdiff_t'. */
#cmakedefine HAVE_PTRDIFF_T

/* Define to 1 if you have the `putenv' function. */
#cmakedefine HAVE_PUTENV

/* Define to 1 if your system has a GNU libc compatible `realloc' function,
   and to 0 otherwise. */
#cmakedefine HAVE_REALLOC

/* Define to 1 if you have the `rmdir' function. */
#cmakedefine HAVE_RMDIR

/* Define to 1 if you have the `select' function. */
#cmakedefine HAVE_SELECT

/* Define to 1 if you have the `setenv' function. */
#cmakedefine HAVE_SETENV

/* Define to 1 if you have the `setlocale' function. */
#cmakedefine HAVE_SETLOCALE

/* Define to 1 if you have the `socket' function. */
#cmakedefine HAVE_SOCKET

/* Define to 1 if you have the `sqrt' function. */
#cmakedefine HAVE_SQRT

/* Define to 1 if you have the <stddef.h> header file. */
#cmakedefine HAVE_STDDEF_H

/* Define to 1 if you have the <stdint.h> header file. */
#cmakedefine HAVE_STDINT_H

/* Define to 1 if you have the <stdlib.h> header file. */
#cmakedefine HAVE_STDLIB_H

/* Define to 1 if you have the `stpcpy' function. */
#cmakedefine HAVE_STPCPY

/* Define to 1 if you have the `strcasecmp' function. */
#cmakedefine HAVE_STRCASECMP

/* Define to 1 if you have the `strchr' function. */
#cmakedefine HAVE_STRCHR

/* Define to 1 if you have the `strcoll' function and it is properly defined.
   */
#cmakedefine HAVE_STRCOLL

/* Define to 1 if you have the `strcspn' function. */
#cmakedefine HAVE_STRCSPN

/* Define to 1 if you have the `strdup' function. */
#cmakedefine HAVE_STRDUP

/* Define to 1 if you have the `strerror' function. */
#cmakedefine HAVE_STRERROR

/* Define to 1 if you have the <strings.h> header file. */
#cmakedefine HAVE_STRINGS_H

/* Define to 1 if you have the <string.h> header file. */
#cmakedefine HAVE_STRING_H

/* Define to 1 if you have the `strlcpy' function. */
#cmakedefine HAVE_STRLCPY

/* Define to 1 if you have the `strncasecmp' function. */
#cmakedefine HAVE_STRNCASECMP

/* Define to 1 if you have the `strpbrk' function. */
#cmakedefine HAVE_STRPBRK

/* Define to 1 if you have the `strrchr' function. */
#cmakedefine HAVE_STRRCHR

/* Define to 1 if you have the `strspn' function. */
#cmakedefine HAVE_STRSPN

/* Define to 1 if you have the `strstr' function. */
#cmakedefine HAVE_STRSTR

/* Define to 1 if you have the `strtol' function. */
#cmakedefine HAVE_STRTOL

/* Define to 1 if you have the `strtoul' function. */
#cmakedefine HAVE_STRTOUL

/* Define to 1 if you have the `strtoull' function. */
#cmakedefine HAVE_STRTOULL

/* Define to 1 if `S_un' is a member of `struct in_addr'. */
#cmakedefine HAVE_STRUCT_IN_ADDR_S_UN

/* Define to 1 if `st_blocks' is a member of `struct stat'. */
#cmakedefine HAVE_STRUCT_STAT_ST_BLOCKS

/* Define to 1 if `st_mtimespec.tv_nsec' is a member of `struct stat'. */
#cmakedefine HAVE_STRUCT_STAT_ST_MTIMESPEC_TV_NSEC

/* Define to 1 if `st_mtime_nsec' is a member of `struct stat'. */
#cmakedefine HAVE_STRUCT_STAT_ST_MTIME_NSEC

/* Define to 1 if `st_mtim.tv_nsec' is a member of `struct stat'. */
#cmakedefine HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC

/* Define to 1 if `st_rdev' is a member of `struct stat'. */
#cmakedefine HAVE_STRUCT_STAT_ST_RDEV

/* Define to 1 if `uc_mcontext.gregs' is a member of `struct ucontext_t'. */
#cmakedefine HAVE_STRUCT_UCONTEXT_T_UC_MCONTEXT_GREGS

/* Define to 1 if `uc_mcontext.gregs' is a member of `struct ucontext'. */
#cmakedefine HAVE_STRUCT_UCONTEXT_UC_MCONTEXT_GREGS

/* Define to 1 if your `struct stat' has `st_blocks'. Deprecated, use
   `HAVE_STRUCT_STAT_ST_BLOCKS' instead. */
#cmakedefine HAVE_ST_BLOCKS

/* Define to 1 if you have the <sys/endian.h> header file. */
#cmakedefine HAVE_SYS_ENDIAN_H

/* Define to 1 if you have the <sys/filsys.h> header file. */
#cmakedefine HAVE_SYS_FILSYS_H

/* Define to 1 if you have the <sys/fs/s5param.h> header file. */
#cmakedefine HAVE_SYS_FS_S5PARAM_H

/* Define to 1 if you have the <sys/ioctl.h> header file. */
#cmakedefine HAVE_SYS_IOCTL_H

/* Define to 1 if you have the <sys/mount.h> header file. */
#cmakedefine HAVE_SYS_MOUNT_H

/* Define to 1 if you have the <sys/param.h> header file. */
#cmakedefine HAVE_SYS_PARAM_H

/* Define to 1 if you have the <sys/socket.h> header file. */
#cmakedefine HAVE_SYS_SOCKET_H

/* Define to 1 if you have the <sys/statfs.h> header file. */
#cmakedefine HAVE_SYS_STATFS_H

/* Define to 1 if you have the <sys/statvfs.h> header file. */
#cmakedefine HAVE_SYS_STATVFS_H

/* Define to 1 if you have the <sys/stat.h> header file. */
#cmakedefine HAVE_SYS_STAT_H

/* Define to 1 if you have the <sys/timeb.h> header file. */
#cmakedefine HAVE_SYS_TIMEB_H

/* Define to 1 if you have the <sys/time.h> header file. */
#cmakedefine HAVE_SYS_TIME_H

/* Define to 1 if you have the <sys/types.h> header file. */
#cmakedefine HAVE_SYS_TYPES_H

/* Define to 1 if you have the <sys/vfs.h> header file. */
#cmakedefine HAVE_SYS_VFS_H

/* Define to 1 if you have the <termios.h> header file. */
#cmakedefine HAVE_TERMIOS_H

/* Define to 1 if you have the `tzset' function. */
#cmakedefine HAVE_TZSET

/* Define to 1 if you have the <unistd.h> header file. */
#cmakedefine HAVE_UNISTD_H

/* Define to 1 if the system has the type 'unsigned long long int'. */
#cmakedefine HAVE_UNSIGNED_LONG_LONG_INT

/* Define to 1 if you have the `utime' function. */
#cmakedefine HAVE_UTIME

/* Define to 1 if you have the <utime.h> header file. */
#cmakedefine HAVE_UTIME_H

/* Define to 1 if you have the <values.h> header file. */
#cmakedefine HAVE_VALUES_H

/* Define to 1 if the system has the `unused' variable attribute */
#cmakedefine HAVE_VAR_ATTRIBUTE_UNUSED

/* Define to 1 if you have the `vfork' function. */
#cmakedefine HAVE_VFORK

/* Define to 1 if you have the <vfork.h> header file. */
#cmakedefine HAVE_VFORK_H

/* Define to 1 if you have the <wchar.h> header file. */
#cmakedefine HAVE_WCHAR_H

/* Define to 1 if `fork' works. */
#cmakedefine HAVE_WORKING_FORK

/* Define to 1 if `vfork' works. */
#cmakedefine HAVE_WORKING_VFORK

/* Define if your compile allows __builtin_expect */
#cmakedefine HAVE___BUILTIN_EXPECT

/* Define to 1 if the system has the type `__uint128_t'. */
#cmakedefine HAVE___UINT128_T

/* Define to 1 to enable JIT compilation */
#cmakedefine JIT

/* Define to the extension used for runtime loadable modules, say, ".so". */
#cmakedefine LT_MODULE_EXT

/* A4000T/A4091, 53C710/53C770 SCSI */
#cmakedefine NCR

/* 53C9X SCSI */
#cmakedefine NCR9X

/* Define to the address where bug reports for this package should be sent. */
#cmakedefine PACKAGE_BUGREPORT

/* Package major version */
#cmakedefine PACKAGE_MAJOR

/* Package minor version */
#cmakedefine PACKAGE_MINOR

/* Define to the full name of this package. */
#cmakedefine PACKAGE_NAME

/* Package revision */
#cmakedefine PACKAGE_REVISION

/* Define to the full name and version of this package. */
#cmakedefine PACKAGE_STRING

/* Define to the one symbol short name of this package. */
#cmakedefine PACKAGE_TARNAME

/* Define to the home page for this package. */
#cmakedefine PACKAGE_URL

/* Define to the version of this package. */
#cmakedefine PACKAGE_VERSION

/* parallell port (printer) emulation */
#cmakedefine PARALLEL_PORT

/* Picasso 96 (uaegfx.card) */
#cmakedefine PICASSO96

/* Define to 1 if you have POSIX serial support */
#cmakedefine POSIX_SERIAL

/* prowizard */
#cmakedefine PROWIZARD

/* uaenet.device */
#cmakedefine SANA2

/* save state support */
#cmakedefine SAVESTATE

/* SuperCardPro floppy image support */
#cmakedefine SCP

/* uaescsi.device */
#cmakedefine SCSIEMU

/* serial port emulation */
#cmakedefine SERIAL_PORT

/* The size of `int', as computed by sizeof. */
#cmakedefine SIZEOF_INT

/* The size of `long', as computed by sizeof. */
#cmakedefine SIZEOF_LONG

/* The size of `long long', as computed by sizeof. */
#cmakedefine SIZEOF_LONG_LONG

/* The size of `long long int', as computed by sizeof. */
#cmakedefine SIZEOF_LONG_LONG_INT

/* The size of `short', as computed by sizeof. */
#cmakedefine SIZEOF_SHORT

/* The size of `void *', as computed by sizeof. */
#cmakedefine SIZEOF_VOID_P

/* If using the C implementation of alloca, define if you know the
   direction of stack growth for your system; otherwise it will be
   automatically deduced at runtime.
	STACK_DIRECTION > 0 => grows toward higher addresses
	STACK_DIRECTION < 0 => grows toward lower addresses
	STACK_DIRECTION = 0 => direction of growth unknown */
#cmakedefine STACK_DIRECTION

/* static build (works on Windows) */
#cmakedefine STATIC_BUILD

/* Define to 1 if you have the ANSI C header files. */
#cmakedefine STDC_HEADERS

/* Define to 1 if you can safely include both <sys/time.h> and <time.h>. */
#cmakedefine TIME_WITH_SYS_TIME

/* uaeserial.device */
#cmakedefine UAESERIAL

/* Which UAE core this version is based on. */
#cmakedefine UAE_BASE_VERSION

/* Define to 1 to use GLib */
#cmakedefine USE_GLIB

/* JIT compilation of FPU instructions */
#cmakedefine USE_JIT_FPU

/* Define to 1 to use OpenGL */
#cmakedefine USE_OPENGL

/* Define to 1 to use libpng */
#cmakedefine USE_PNG

/* Define to 1 to use SDL 2.0 */
#cmakedefine USE_SDL2

/* Define to 1 to use SDL for input */
#cmakedefine USE_SDL_INPUT

/* Define to 1 to use SDL for video */
#cmakedefine USE_SDL_VIDEO

/* Define to 1 to use X11 */
#cmakedefine USE_X11

/* Define to 1 to use zlib */
#cmakedefine USE_ZLIB

/* Version number of package */
#cmakedefine VERSION

/* built-in SLIRP implementation (unsupported) */
#cmakedefine WITH_BUILTIN_SLIRP

/* Define to 1 to use CEF */
#cmakedefine WITH_CEF

/* cpu board emulation */
#cmakedefine WITH_CPUBOARD

/* Define to 1 to use GLAD */
#cmakedefine WITH_GLAD

/* Define to 1 to use GLEW */
#cmakedefine WITH_GLEW

/* Define to 1 to use libmpeg2 */
#cmakedefine WITH_LIBMPEG2

/* LUA scripting (unfinished) */
#cmakedefine WITH_LUA

/* netplay support */
#cmakedefine WITH_NETPLAY

/* Define to 1 to use OpenAL */
#cmakedefine WITH_OPENAL

/* use PearPC for PPC emulation (deprecated) */
#cmakedefine WITH_PEARPC_CPU

/* PPC (requires cpu board) */
#cmakedefine WITH_PPC

/* use QEMU plugin for PPC emulation */
#cmakedefine WITH_QEMU_CPU

/* use QEMU plugin for SLIRP implementation */
#cmakedefine WITH_QEMU_SLIRP

/* Define to 1 to use QT */
#cmakedefine WITH_QT

/* segtracker support in debugger */
#cmakedefine WITH_SEGTRACKER

/* SLIRP (user mode NAT) */
#cmakedefine WITH_SLIRP

/* use softfloat library */
#cmakedefine WITH_SOFTFLOAT

/* Toccata sound card emulation */
#cmakedefine WITH_TOCCATA

/* uaenative.library */
#cmakedefine WITH_UAENATIVE

/* UDIS86 x86/x86-64 disassembler */
#cmakedefine WITH_UDIS86

/* vpar virtual parallel port */
#cmakedefine WITH_VPAR

/* XML shader support */
#cmakedefine WITH_XML_SHADER

/* Define WORDS_BIGENDIAN to 1 if your processor stores words with the most
   significant byte first (like Motorola and SPARC, unlike Intel). */
#if defined AC_APPLE_UNIVERSAL_BUILD
# if defined __BIG_ENDIAN__
#  define WORDS_BIGENDIAN 1
# endif
#else
# ifndef WORDS_BIGENDIAN
#  undef WORDS_BIGENDIAN
# endif
#endif

/* Enable large inode numbers on Mac OS X 10.5.  */
#ifndef _DARWIN_USE_64_BIT_INODE
# define _DARWIN_USE_64_BIT_INODE 1
#endif

/* Number of bits in a file offset, on hosts where this is settable. */
#cmakedefine _FILE_OFFSET_BITS

/* Define to 1 to make fseeko visible on some hosts (e.g. glibc 2.2). */
#cmakedefine _LARGEFILE_SOURCE

/* Define for large files, on AIX-style hosts. */
#cmakedefine _LARGE_FILES

/* Define for Solaris 2.5.1 so the uint32_t typedef from <sys/synch.h>,
   <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
   #define below would cause a syntax error. */
#cmakedefine _UINT32_T

/* Define for Solaris 2.5.1 so the uint64_t typedef from <sys/synch.h>,
   <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
   #define below would cause a syntax error. */
#cmakedefine _UINT64_T

/* Define for Solaris 2.5.1 so the uint8_t typedef from <sys/synch.h>,
   <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
   #define below would cause a syntax error. */
#cmakedefine _UINT8_T

/* Define to empty if `const' does not conform to ANSI C. */
#cmakedefine const

/* Define to `int' if <sys/types.h> doesn't define. */
#cmakedefine gid_t

/* Define to `__inline__' or `__inline' if that's what the C compiler
   calls it, or to nothing if 'inline' is not supported under any name.  */
#ifndef __cplusplus
#cmakedefine inline
#endif

/* Define to the type of a signed integer type of width exactly 16 bits if
   such a type exists and the standard includes do not define it. */
#cmakedefine int16_t

/* Define to the type of a signed integer type of width exactly 32 bits if
   such a type exists and the standard includes do not define it. */
#cmakedefine int32_t

/* Define to the type of a signed integer type of width exactly 64 bits if
   such a type exists and the standard includes do not define it. */
#cmakedefine int64_t

/* Define to the type of a signed integer type of width exactly 8 bits if such
   a type exists and the standard includes do not define it. */
#cmakedefine int8_t

/* Define to `int' if <sys/types.h> does not define. */
#cmakedefine mode_t

/* Define to `long int' if <sys/types.h> does not define. */
#cmakedefine off_t

/* Define to `int' if <sys/types.h> does not define. */
#cmakedefine pid_t

/* Define to rpl_realloc if the replacement function should be used. */
#cmakedefine realloc

/* Define to the equivalent of the C99 'restrict' keyword, or to
   nothing if this is not supported.  Do not define if restrict is
   supported directly.  */
#cmakedefine restrict
/* Work around a bug in Sun C++: it does not support _Restrict or
   __restrict__, even though the corresponding Sun C compiler ends up with
   "#define restrict _Restrict" or "#define restrict __restrict__" in the
   previous line.  Perhaps some future version of Sun C++ will work with
   restrict; if so, hopefully it defines __RESTRICT like Sun C does.  */
#if defined __SUNPRO_CC && !defined __RESTRICT
# define _Restrict
# define __restrict__
#endif

/* Define to `unsigned int' if <sys/types.h> does not define. */
#cmakedefine size_t

/* Define to `int' if <sys/types.h> does not define. */
#cmakedefine ssize_t

/* Define to `int' if <sys/types.h> doesn't define. */
#cmakedefine uid_t

/* Define to the type of an unsigned integer type of width exactly 16 bits if
   such a type exists and the standard includes do not define it. */
#cmakedefine uint16_t

/* Define to the type of an unsigned integer type of width exactly 32 bits if
   such a type exists and the standard includes do not define it. */
#cmakedefine uint32_t

/* Define to the type of an unsigned integer type of width exactly 64 bits if
   such a type exists and the standard includes do not define it. */
#cmakedefine uint64_t

/* Define to the type of an unsigned integer type of width exactly 8 bits if
   such a type exists and the standard includes do not define it. */
#cmakedefine uint8_t

/* Define as `fork' if `vfork' does not work. */
#cmakedefine vfork

/* Define to empty if the keyword `volatile' does not work. Warning: valid
   code using `volatile' can become incorrect without. Disable with care. */
#cmakedefine volatile
